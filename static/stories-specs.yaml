swagger: "2.0"
info:
  description: "This the microservice that handles all the requests about the stories database"
  version: "1.0.0"
  title: "Stories Microservice"
schemes:
- "http"
paths:
  #ANCHOR 
  /stories:
    get:
      operationId: getStories
      produces:
      - "application/json"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/Stories"
        
  #ANCHOR 
  /writers-last-stories:
    get:
      operationId: writers-last-stories
      produces:
      - "application/json"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/Stories"

  #ANCHOR 
  /stories-by-date:
    get:
      operationId: stories-by-date
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "start"
        required: true
        type: "string"
      - in: "query"
        name: "end"
        required: true
        type: "string"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/Stories"
        '400':
          description: "Error, wrong date!"

  #ANCHOR 
  /stories-by-writer:
    get:
      operationId: stories-by-writer
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "writer_id"
        required: true
        type: "integer"
      - in: "query"
        name: "user_id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/Stories"
        '404':
          description: "Not Found!"

  #ANCHOR 
  /following-stories/{user-id}:
    get:
      operationId: following-stories
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/Stories"
        '404':
          description: "Not Found!"

  #ANCHOR 
  /retrieve-set-themes:
    get:
      operationId: retrieve-set-themes
      produces:
      - "application/json"
      responses:
        '200':
          description: "Stories correctly loaded"
          schema:
            $ref: "#/definitions/RetrieveSetThemeResponse"
        '404':
          description: "Not Found!"          

  #ANCHOR     
  /story/{story-id}/{user-id}:
    get:
      operationId: getStoryByID
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "path"
        name: "story-id"
        type: "integer"
        required: true
        description: Object containing story_id to retrieve
      - in : "path"
        name: "user-id"
        type: "integer"
        required: true
        description: ID of the user making the request
      responses:
        '200':
          description: "Story correctly loaded"
          schema:
            $ref: '#/definitions/Story'
        '401':
          description: "Not Authorized"
        '404':
          description: "Not Found!"
    delete:
      operationId: deleteStory
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "path"
        name: "story-id"
        type: "integer"
        required: true
        description: Object containing story_id to retrieve
      - in : "path"
        name: "user-id"
        type: "integer"
        required: true
        description: ID of the user making the request
      responses:
        '200':
          description: "Story correctly deleted"
        '401':
          description: "Not Authorized"
        '404':
          description: "User not logged in"
  # ANCHOR    
  /random_story/{user-id}:
    get:
      operationId: getRandomStory
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "Random story correctly loaded"
          schema:
            $ref: '#/definitions/Story'
        '404':
          description: "Not story found"
          
  # ANCHOR      
  /dislike/{story-id}:
    post:
      operationId: dislike
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "story-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "Dislike added"
        '400':
          description: "Malformed request"
        '404':
          description: "Story not valid"
    delete:
      operationId: remove_dislike
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "story-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "Dislike removed"
        '400':
          description: "Malformed request"
        '404':
          description: "Story not valid"

  # ANCHOR      
  /like/{story-id}:
    post:
      operationId: like
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "story-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "like added"
        '400':
          description: "Malformed request"
        '404':
          description: "Story not valid"
    delete:
      operationId: remove_like
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "story-id"
        required: true
        type: "integer"
      responses:
        '200':
          description: "like removed"
        '400':
          description: "Malformed request"
        '404':
          description: "Story not valid"

  # ANCHOR        
  /new-draft:
    post:
      operationId: new-draft
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "body"
        name: "body"
        required: true
        description: Object containing theme and dice number 
        schema:
          $ref: "#/definitions/Draft-definition"  
      responses:
        '200':
          description: Inizialized a new draft, return a story_id
          schema:
            $ref: "#/definitions/SingleStoryID"
        '400':
          description: Error
          
  # ANCHOR             
  /write-story: 
    put:
      operationId: write_story
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "body"
        name: "body"
        required: true
        description: Object containing story_id
        schema:
          $ref: "#/definitions/Story"
      responses: 
        '200':
          description: "Update the story by the given ID"
          schema:
            $ref: "#/definitions/Draft"
        '404':
          description: "Resource not found"
          
definitions:
  Story:
    type: "object"
    properties:
      story_id:
        type: "integer"
      title:
        type: "string"
      text:
        type: "string"
      rolls_outcome:
        type: "string"
      theme:
        type: "string"
      date:
        type: "string"
      likes:
        type: "integer"
      dislikes:
        type: "integer"
      published:
        type: "boolean"
      author_id:
        type: "integer"
      author_name:
        type: "string"
    required:
    - "story_id"
    - "title"
    - "text"
    - "rolls_outcome"
    - "theme"
    - "date"
    - "likes"
    - "dislikes"
    - "published"
    - "author_id"
    - "author_name"
    additionalProperties: false

  Stories:
    type: "object"
    properties:
      stories:
       type: "array"
       items:
          $ref: "#/definitions/Story"

    
  StoryArray:
    type: "array"
    items:
      $ref: '#/definitions/Story'
      
  SingleStoryID:
    type: "object"
    properties:
      story_id:
        type: "integer"
      
  Date:
    type: "object"
    properties:
      beginDate:
        type: "string"
      endDate:
        type: "string"
    required: 
    - "beginDate"
    - "endDate"
    additionalProperties: false
     
  StoryId:
    type: "object"
    properties:
      story_id: 
        type: "integer"
    required:
    - "story_id"
    additionalProperties: false
    
  RetrieveSetThemeResponse:
    type: "object"
    properties:
      themes:
        type: "array"
        items:
          type: "string"
      dice_number:
        type: "integer"
    
  DiceOutcome:
    type: "string"
  
  Draft:
    type: "object"
    properties:
      story_id:
        type: "integer"
      title:
        type: "string"
      text:
        type: "string"
      rolls_outcome:
        type: "string"
      theme:
        type: "string"
      published:
        type: "boolean"
      author_id:
        type: "integer"
    required:
    - "story_id"
    - "rolls_outcome"
    - "theme"
    - "author_id"
    additionalProperties: false
      
  Reaction:
    type: "object"
    properties:
      story_id:
        type: "integer"
      remove_opposite:
        type: "boolean"
    required:
    - "story_id"
    additionalProperties: false  

  Draft-definition:
    type: "object"
    properties:
      theme:
        type: "string"
      dice_number: 
        type: "integer"
    required:
    - "theme"
    - "dice_number"